to work with back end, first cd into server
npm install express and nodemon


to run the whole backend code, u need to go to server.js
and just run that specific file


also, before starting to run, in the services/mongo.js file, u need to set the MongoDB connection string as below
const MONGO_URL = "mongodb://localhost:27017/";


-------------
models folder ( M )
-------------
all we did was to write schemas for the planetsCollection and launchesCollection
then, in the planets.model.js, we read the csv file as stream, filtered the planets, and stored those planet-docs inside the planetsCollection
then, in the launches.model.js, we got the data from api, we axiosed it, and then saved each launch-doc into the launchesCollection
in the in the launches.model.js,
we also did scheduleNewLaunch() and abortLaunchById(). one adds a new launch-doc into the collection,
and the other just adds new KV pairs to that launch-doc, instead of deleting that specific launch-doc
=> so in models folder, all we did was to deal with the data and the database



---------------
services folder
---------------
1. has mongodb connection, disconnection, connection-acknowledgement, error-acknowledgement functions
2. has some code to facilitate pagination



-------------
routes folder ( C )
-------------
to handle API end points, get and post requests, 

routes is the controllers folder
it is always two parts, controller-file and router-file
there are controller-functions in the controller-file 
and in the router file, we map specific routes with specific controller fucntions.


------
app.js
------



---------
server.js
---------
RUN the app from here